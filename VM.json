{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subscriptionId": {
      "type": "string"
    },
    "virtualNetworkId": {
      "type": "string"
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": false
    },
    "applicationSecurityGroups": {
      "type": "array"
    },
    "subnetName": {
      "type": "string"
    },
    "enablePublicIpAddress": {
      "type": "bool"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "osDiskType": {
      "type": "string"
    },
    "dataDiskConfig": {
      "type": "array"
    },
    "virtualMachineSize": {
      "type": "string"
    },
    "virtualMachineOffer": {
      "type": "string"
    },
    "virtualMachinePublisher": {
      "type": "string"
    },
    "virtualMachineSku": {
      "type": "string"
    },
    "virtualMachineImageVersion": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "diagnosticsStorageAccountName": {
      "type": "string"
    },
    "availabilitySetName": {
      "type": "string"
    },
    "availabilitySetPlatformFaultDomainCount": {
      "type": "int"
    },
    "availabilitySetPlatformUpdateDomainCount": {
      "type": "int"
    },
    "autoShutdownStatus": {
      "type": "string"
    },
    "autoShutdownTime": {
      "type": "string"
    },
    "autoShutdownTimeZone": {
      "type": "string"
    },
    "autoShutdownNotificationStatus": {
      "type": "string"
    },
    "autoShutdownNotificationLocale": {
      "type": "string"
    },
    "tagsData": {
      "type": "object"
    }
  },
  "variables": {
    "publicIpAddressSku": "Basic",
    "publicIpAddressType": "Dynamic",
    "vnetId": "[parameters('virtualNetworkId')]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
    "networkInterfaceType": "[if(equals(parameters('enablePublicIpAddress'), bool('false')), '-private', '-public')]",
    "publicIpAddressName": "[concat(parameters('virtualMachineName'),'-ip')]",
    "disk0": "[concat(parameters('virtualMachineName'),'_DataDisk_0')]",
    "availabilitySetId": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
    },
    "sqlDatabaseDiskConfigIndex": 1,
    "octopusPublicHostNameForPrivateIp": "Custom",
    "DiskCount": "[length(parameters('dataDiskConfig'))]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('enablePublicIpAddress'), bool('false'))]",
      "name": "[concat(variables('networkInterfaceName'), '-private')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "applicationSecurityGroups": "[if(empty(parameters('applicationSecurityGroups')), json('null'), parameters('applicationSecurityGroups'))]",
              "privateIPAllocationMethod": "[variables('publicIpAddressType')]"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
      },
      "tags": "[parameters('tagsData')]"
    },
    {
      "condition": "[equals(parameters('enablePublicIpAddress'), bool('true'))]",
      "name": "[concat(variables('networkInterfaceName'), '-public')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "[variables('publicIpAddressType')]",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ]
      },
      "tags": {}
    },
    {
      "condition": "[equals(parameters('enablePublicIpAddress'), bool('true'))]",
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
      },
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      },
      "tags": {}
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'), variables('networkInterfaceType'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(greater(parameters('availabilitySetPlatformFaultDomainCount'),0),variables('availabilitySetId'),json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('virtualMachineName'), '_OsDisk')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "[parameters('virtualMachinePublisher')]",
            "offer": "[parameters('virtualMachineOffer')]",
            "sku": "[parameters('virtualMachineSku')]",
            "version": "[parameters('virtualMachineImageVersion')]"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(parameters('dataDiskConfig'))]",
              "input": {
                "name": "[concat(parameters('virtualMachineName'), '_DataDisk_', parameters('dataDiskConfig')[copyIndex('dataDisks')].lun)]",
                "createOption": "[parameters('dataDiskConfig')[copyIndex('dataDisks')].createOption]",
                "caching": "ReadOnly",
                "lun": "[parameters('dataDiskConfig')[copyIndex('dataDisks')].lun]",
                "diskSizeGB": "[parameters('dataDiskConfig')[CopyIndex('dataDisks')].diskSizeGB]",
                "writeAcceleratorEnabled": "[parameters('dataDiskConfig')[copyIndex('dataDisks')].writeAcceleratorEnabled]",
                "managedDisk": {
                  "storageAccountType": "[parameters('dataDiskConfig')[copyIndex('dataDisks')].storageAccountType]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',  concat(variables('networkInterfaceName'), variables('networkInterfaceType')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        },
        "licenseType": "Windows_Server",
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
          }
        }
      },
      "tags": "[parameters('tagsData')]"
    },
    {
      "condition": "[greater(parameters('availabilitySetPlatformFaultDomainCount'),0)]",
      "name": "[parameters('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": {}
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "vmResourceID": {
      "type": "string",
      "value": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name,'/providers/Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'))]"
    },
    "publicIpAddressId": {
      "type": "string",
      "value": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
    },
    "virtualNetworkId": {
      "type": "string",
      "value": "[variables('vNetId')]"
    }
  }
}