{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "applicationGatewayName": {
      "type": "string"
    },
    "backendPoolFqdn": {
      "type": "string"
    },
    "tier": {
      "type": "string"
    },
    "skuSize": {
      "type": "string"
    },
    "autoScaleMaxCapacity": {
      "type": "int",
      "defaultValue": 5
    },
    "autoScaleMinCapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "frontEndPort": {
      "type": "int"
    },
    "subnetName": {
      "type": "string"
    },
    "enableHttp2": {
      "type": "bool",
      "defaultValue": false
    },
    "zones": {
      "type": "array"
    },
    "publicIpAddressName": {
      "type": "string"
    },
    "skuPIP": {
      "type": "string"
    },
    "allocationMethod": {
      "type": "string"
    },
    "publicIpZones": {
      "type": "array"
    },
    "idleTimeoutInMinutes": {
      "type": "int"
    },
    "vNetName": {
      "type": "string"
    },
    "certData": {
      "type": "securestring",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "probeEnabled": {
      "type": "bool"
    },
    "healthyStatusCodes": {
      "type": "string"
    },
    "probeProtocol": {
      "type": "string"
    },
    "probeHost": {
      "type": "string"
    },
    "probePath": {
      "type": "string"
    },
    "probeIntervalInSeconds": {
      "type": "int"
    },
    "probeTimeoutInSeconds": {
      "type": "int"
    },
    "probeUnhealthyThreshold": {
      "type": "int"
    },
    "probePickHostNameFromBackendHttpSettings": {
      "type": "bool"
    },
    "probeMinServersAvailable": {
      "type": "int"
    },
    "probeName": {
      "type": "string"
    },
    "dnsLabel": {
      "type": "string"
    },
    "tagsData": {
      "type": "object"
    }
  },
  "variables": {
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]"
  },
  "resources": [
    {
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2019-09-01",
      "location": "[parameters('location')]",
      "zones": "[parameters('zones')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]"
      ],
      "properties": {
        "autoscaleConfiguration": {
          "minCapacity": "[parameters('autoScaleMinCapacity')]",
          "maxCapacity": "[parameters('autoScaleMaxCapacity')]"
        },
        "sku": {
          "name": "[parameters('skuSize')]",
          "tier": "[parameters('tier')]"
        },
        "sslPolicy": {
          "policyType": "Custom",
          "cipherSuites": [
            "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
            "TLS_RSA_WITH_AES_128_CBC_SHA256",
            "TLS_RSA_WITH_AES_256_CBC_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
            "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
          ],
          "minProtocolVersion": "TLSv1_2"
        },
        "sslCertificates": [
          {
            "name": "appGatewaySslCert",
            "properties": {
              "data": "[parameters('certData')]",
              "password": "[parameters('certPassword')]"
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "fqdn": "[parameters('backendPoolFqdn')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 443,
              "Protocol": "Https",
              "CookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "probeEnabled": true,
              "probe": {
                "id": "[concat(variables('applicationGatewayID'), '/probes/', parameters('probeName'))]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Https",
              "requireServerNameIndication": false,
              "SslCertificate": {
                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
              }
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "probes": [
          {
            "Name": "[parameters('probeName')]",
            "properties": {
              "Protocol": "[parameters('probeProtocol')]",
              "Path": "[parameters('probePath')]",
              "Host": "[parameters('probeHost')]",
              "Interval": "[parameters('probeIntervalInSeconds')]",
              "Timeout": "[parameters('probeTimeoutInSeconds')]",
              "UnhealthyThreshold": "[parameters('probeUnhealthyThreshold')]",
              "MinServers": "[parameters('probeMinServersAvailable')]",
              "Match": {
                "StatusCodes": [
                  "[parameters('healthyStatusCodes')]"
                ]
              },
              "PickHostNameFromBackendHttpSettings": "[parameters('probePickHostNameFromBackendHttpSettings')]"
            }
          }
        ],
        "enableHttp2": "[parameters('enableHttp2')]",
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Prevention",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.1"
        }
      },
      "tags": "[parameters('tagsData')]"
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuPIP')]"
      },
      "zones": "[parameters('publicIpZones')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('allocationMethod')]",
        "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabel')]"
        }
      },
      "tags": "[parameters('tagsData')]"
    }
  ],
  "outputs": {
    "AppGatewayName": {
      "value": "[parameters('applicationGatewayName')]",
      "type": "string"
    },
    "AppGatewayResourceGroup": {
      "value": "[resourceGroup().name]",
      "type": "string"
    },
    "AppGatewayResourceId": {
      "value": "[resourceId('Microsoft.Network/applicationGateways',parameters('applicationGatewayName'))]",
      "type": "string"
    }
  }
}